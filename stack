#include <iostream>
using namespace std;

// Constants
const int MAX_SIZE = 100; // Maximum size of the stack

// Global variables
int stack[MAX_SIZE]; // Array to hold stack elements
int top = -1; // Initialize top to -1 (empty stack)

// Function to check if the stack is empty
bool isEmpty() {
    return top == -1; // If top is -1, stack is empty
}

// Function to push data onto the stack
void push(int value) {
    if (top == MAX_SIZE - 1) {
        cout << "Stack overflow! Cannot push " << value << endl;
        return;
    }
    stack[++top] = value; // Increment top and add value
    cout << value << " pushed onto the stack." << endl;
}

// Function to pop data from the stack
int pop() {
    if (isEmpty()) {
        cout << "Stack is empty! Cannot pop." << endl;
        return -1; // Indicate error
    }
    return stack[top--]; // Return top value and decrement top
}

// Function to peek at the top element
int peek() {
    if (isEmpty()) {
        cout << "Stack is empty! Cannot peek." << endl;
        return -1; // Indicate error
    }
    return stack[top]; // Return top value
}

int main() {
    int choice, value;

    do {
        cout << "\nStack Operations Menu:\n";
        cout << "1. Push\n";
        cout << "2. Pop\n";
        cout << "3. Peek\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter value to push: ";
                cin >> value;
                push(value);
                break;
            case 2:
                value = pop();
                if (value != -1) {
                    cout << value << " popped from the stack." << endl;
                }
                break;
            case 3:
                value = peek();
                if (value != -1) {
                    cout << "Top element is: " << value << endl;
                }
                break;
            case 4:
                cout << "Exiting the program." << endl;
                break;
            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    } while (choice != 4);

    return 0;
}
